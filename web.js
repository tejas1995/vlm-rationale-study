(()=>{"use strict";let t="https://tejassrinivasan.pythonanywhere.com/";var e=!1,n=[];let i=-1,s=null,o=-1,a=-1,r=-1,u=0,l=0,d=0;function _(t){o=t,$("#button_answeronly_usertrusts").attr("disabled","true"),$("#button_answeronly_userdistrusts").attr("disabled","true"),$("#button_answeronly_userunsure").attr("disabled","true"),0==t?$("#button_answeronly_usertrusts").attr("activedecision","true"):1==t?$("#button_answeronly_userdistrusts").attr("activedecision","true"):2==t&&$("#button_answeronly_userunsure").attr("activedecision","true"),$("#ai_explanation_div").show()}function c(t){a=t,$("#button_withexplanation_usertrusts").attr("disabled","true"),$("#button_withexplanation_userdistrusts").attr("disabled","true"),$("#button_withexplanation_userunsure").attr("disabled","true"),0==t?$("#button_withexplanation_usertrusts").attr("activedecision","true"):1==t?$("#button_withexplanation_userdistrusts").attr("activedecision","true"):2==t&&$("#button_withexplanation_userunsure").attr("activedecision","true"),$("#ai_explanation_quality_div").show()}function b(t){r=t,$("#button_withexplanationquality_usertrusts").attr("disabled","true"),$("#button_withexplanationquality_userdistrusts").attr("disabled","true"),$("#button_withexplanationquality_userunsure").attr("disabled","true"),0==t?$("#button_withexplanationquality_usertrusts").attr("activedecision","true"):1==t?$("#button_withexplanationquality_userdistrusts").attr("activedecision","true"):2==t&&$("#button_withexplanationquality_userunsure").attr("activedecision","true"),$("#button_next").show(),$("#button_next").removeAttr("disabled")}function h(t){l+=t,0==l?$("#button_instructions_prev").attr("disabled","true"):$("#button_instructions_prev").removeAttr("disabled"),l>=5?($("#instructions_and_decorations").show(),$("#button_instructions_next").val("Start study")):($("#instructions_and_decorations").hide(),$("#button_instructions_next").val("Next")),6==l&&($("#instructions_and_decorations").show(),$("#main_box_instructions").hide(),$("#main_box_experiment").show(),p()),$("#main_box_instructions").children(":not(input)").each(((t,e)=>{$(e).hide()})),$(`#instructions_${l}`).show()}function w(t){return 2!=t?t==1-s.prediction_is_correct?1:0:-1}function p(){if($("#button_readytoanswer").removeAttr("activedecision"),$("#button_readytoanswer").removeAttr("disabled"),$("#button_readytoanswer").show(),$("#button_answeronly_usertrusts").removeAttr("activedecision"),$("#button_answeronly_usertrusts").removeAttr("disabled"),$("#button_answeronly_userdistrusts").removeAttr("activedecision"),$("#button_answeronly_userdistrusts").removeAttr("disabled"),$("#button_answeronly_userunsure").removeAttr("activedecision"),$("#button_answeronly_userunsure").removeAttr("disabled"),$("#button_withexplanation_usertrusts").removeAttr("activedecision"),$("#button_withexplanation_usertrusts").removeAttr("disabled"),$("#button_withexplanation_userdistrusts").removeAttr("activedecision"),$("#button_withexplanation_userdistrusts").removeAttr("disabled"),$("#button_withexplanation_userunsure").removeAttr("activedecision"),$("#button_withexplanation_userunsure").removeAttr("disabled"),$("#button_withexplanationquality_usertrusts").removeAttr("activedecision"),$("#button_withexplanationquality_usertrusts").removeAttr("disabled"),$("#button_withexplanationquality_userdistrusts").removeAttr("activedecision"),$("#button_withexplanationquality_userdistrusts").removeAttr("disabled"),$("#button_withexplanationquality_userunsure").removeAttr("activedecision"),$("#button_withexplanationquality_userunsure").removeAttr("disabled"),$("#ai_explanation_div").hide(),$("#ai_explanation_quality_div").hide(),$("#button_next").hide(),$("#button_quit").hide(),i+=1,i>=n.length)return $("#main_box_experiment").hide(),void(e?($("#reward_box_mock").text(`Your total reward is $${u.toFixed(2)} (${i} questions answered) + $2.`),$("#reward_box_mock").show(),$("#main_box_end_mock").show()):($("#reward_box").text(`Your total reward is $${u.toFixed(2)} (${i} questions answered) + $2.`),$("#reward_box").show(),$("#main_box_end").show()));s=n[i],$("#question_span").html(s.question),$("#ai_prediction_span").html(s.predicted_answer),$("#ai_explanation_span").html(s.generated_rationale);let t=Math.round(100*s["visual fidelity"]);$("#explanation_fidelity_span").html(`${t}%`);let o=Math.round(100*s.contrastiveness);$("#explanation_contrastiveness_span").html(`${o}%`),$("#progress").text(`Progress: ${i+1} / ${n.length}`)}document.getElementById("button_answeronly_usertrusts")?.addEventListener("click",(()=>_(0))),document.getElementById("button_answeronly_userdistrusts")?.addEventListener("click",(()=>_(1))),document.getElementById("button_answeronly_userunsure")?.addEventListener("click",(()=>_(2))),document.getElementById("button_withexplanation_usertrusts")?.addEventListener("click",(()=>c(0))),document.getElementById("button_withexplanation_userdistrusts")?.addEventListener("click",(()=>c(1))),document.getElementById("button_withexplanation_userunsure")?.addEventListener("click",(()=>c(2))),document.getElementById("button_withexplanationquality_usertrusts")?.addEventListener("click",(()=>b(0))),document.getElementById("button_withexplanationquality_userdistrusts")?.addEventListener("click",(()=>b(1))),document.getElementById("button_withexplanationquality_userunsure")?.addEventListener("click",(()=>b(2))),$("#button_instructions_next").on("click",(()=>h(1))),$("#button_instructions_prev").on("click",(()=>h(-1))),$("#button_next").on("click",(()=>{let e=u;if(function(){if(2!=r){let t=1-s.prediction_is_correct;r==t&&(u+=.1)}}(),-1!=i){let n={question_i:i,user_selections:{answeronly:o,withexplanation:a,withexplanationquality:r},user_is_correct:{answeronly:w(o),withexplanation:w(a),withexplanationquality:w(r)},balance:{old:e,new:u}};n.question=s,n.count_exited_page=d,async function(e){e.url_data=globalThis.url_data,console.log("Data"),"study_id"in e.url_data||(e.url_data.study_id="demo_study"),"prolific_id"in e.url_data||(e.url_data.prolific_id="demo_user"),"session_id"in e.url_data||(e.url_data.session_id="demo_session"),e.url_data.queue_id=globalThis.uid,console.log("logged",e),console.log("Logging to",t+"log");try{let n=await $.ajax(t+"log",{data:JSON.stringify({project:"vlm-rationales-study/"+e.url_data.study_id,uid:globalThis.uid+"_"+e.url_data.prolific_id,payload:JSON.stringify(e)}),type:"POST",contentType:"application/json"});return await async function(){return new Promise((t=>setTimeout(t,2e3)))}(),n}catch(t){console.log(t)}}(n),d=0}p()}));const m=new URLSearchParams(window.location.search),y=m.get("start"),x=m.get("uid");if(globalThis.url_data=function(t){const e={};for(const[n,i]of t)e[n]=i;return e}(m.entries()),null==globalThis.url_data.study_id&&(globalThis.url_data.study_id="demo_study"),null==globalThis.url_data.prolific_id&&(globalThis.url_data.prolific_id="demo_user"),null==globalThis.url_data.session_id&&(globalThis.url_data.session_id="demo_session"),null!=x){if(globalThis.uid=x,"prolific_random"==globalThis.uid){let t=`${Math.floor(10*Math.random())}`.padStart(3,"0");globalThis.uid=`${m.get("prolific_queue_name")}/${t}`}}else{let t=null;for(;null==t;)t=prompt("Enter your user id. Please get in touch if you were not assigned an id but wish to participate in this experiment.");globalThis.uid=t}globalThis.url_data.session_id.startsWith("demo")&&(e=!0),console.log("Running with UID",globalThis.uid),async function(){return await $.getJSON(`baked_queues/${globalThis.uid}.json?t=${Date.now()}`)}().catch((t=>{console.log("Invalid user id."),console.log(globalThis.uid),window.location.reload()})).then((t=>{n=t,null!=y&&(i=parseInt(y)-1,console.log("Starting from",i)),h(0),$("#main_box_instructions").show(),$("#instructions_and_decorations").hide()})),console.log("Starting session with UID:",globalThis.uid);let v=!1;document.onvisibilitychange=()=>{v||(d+=1,v=!0,v=!1)}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,